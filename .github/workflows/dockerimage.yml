name: Docker Image CI
on:
  # schedule:
    # - cron:  '0 0 * * *'
  push:
    branches:
    - master
    - autobuild

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Check if dockerhub version already exists
      run: echo "##[set-output name=rc;]$(curl -s -o /dev/null --write-out '%{http_code}' https://registry.hub.docker.com/v1/repositories/germainlefebvre4/helm-kubectl-docker/tags/${{ steps.kubectl.outputs.version }}-${{ steps.helm.outputs.version }} )"
      id: dockerhub
    - name: Get latest kubectl version
      run: echo "##[set-output name=version;]$(curl https://storage.googleapis.com/kubernetes-release/release/stable.txt)"
      id: kubectl
    - name: Get latest helm version
      run: echo "##[set-output name=version;]$(curl https://github.com/helm/helm/releases/latest | grep -oP '\"tag_name\": \"\K(.*)(?=\")')"
      id: helm
    - name: Sumup versions
      run: |
        echo "dockerhub: ${{ steps.dockerhub.outputs.rc }} (needs 404)"
        echo "kubectl version: ${{ steps.kubectl.outputs.version }}"
        echo "helm version: ${{ steps.helm.outputs.version }}"
    - name: Build the Docker image
      run: docker build . --file Dockerfile --build-arg KUBE_VERSION=${{ steps.kubectl.outputs.version }} --build-arg HELM_VERSION=${{ steps.helm.outputs.version }} --tag germainlefebvre4/helm-kubectl-docker:dev-${{ steps.kubectl.outputs.version }}-${{ steps.helm.outputs.version }}
      if: steps.dockerhub.outputs.rc != 200
    - name: Test run container - Print Kubectl version
      run: docker run --rm --entrypoint=kubectl germainlefebvre4/helm-kubectl-docker:dev-${{ steps.kubectl.outputs.version }}-${{ steps.helm.outputs.version }} version --client
      if: steps.dockerhub.outputs.rc != 200
    - name: Test run container - Print Helm version
      run: docker run --rm germainlefebvre4/helm-kubectl-docker:dev-${{ steps.kubectl.outputs.version }}-${{ steps.helm.outputs.version }} version --client
      if: steps.dockerhub.outputs.rc != 200
    - name: Publish to Docker Repository
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: germainlefebvre4/helm-kubectl-docker:dev-${{ steps.kubectl.outputs.version }}-${{ steps.helm.outputs.version }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
      if: steps.dockerhub.outputs.rc != 200

